From 5644299fcc005ac803a849678db521c9ae4bcbed Mon Sep 17 00:00:00 2001
From: Surya Ambrose <surya.ambrose@gmail.com>
Date: Fri, 25 Mar 2016 01:41:23 +0100
Subject: [PATCH 4/8] Rebase from 'upstream'

---
 CMakeLists.txt              | 40 ++++++++++++++++++++++------------------
 cmake/libqi-extras.cmake.em |  6 ------
 2 files changed, 22 insertions(+), 24 deletions(-)
 delete mode 100644 cmake/libqi-extras.cmake.em

diff --git a/CMakeLists.txt b/CMakeLists.txt
index be464ed..df1ce1a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,13 +3,10 @@
 ## found in the COPYING file.
 
 cmake_minimum_required(VERSION 2.8)
-project(naoqi_libqi)
-find_package(catkin)
+project(LibQi)
+find_package(qibuild)
+qi_sanitize_compile_flags(HIDDEN_SYMBOLS)
 
-catkin_package(CFG_EXTRAS libqi-extras.cmake
-   INCLUDE_DIRS ./
-   LIBRARIES qi
-)
 
 include(CheckSymbolExists)
 check_symbol_exists(_SC_HOST_NAME_MAX "unistd.h" HAVE_SC_HOST_NAME_MAX)
@@ -48,6 +45,8 @@ endif()
 # Remove this line to use QT if usable
 set(WITH_QT5_CORE OFF)
 
+qi_add_optional_package(QT5_CORE "Enable QT")
+qi_add_optional_package(BOOST_LOCALE "Enable usage of boost::locale")
 if(WITH_BOOST_LOCALE)
   add_definitions(" -DWITH_BOOST_LOCALE ")
 endif()
@@ -322,16 +321,15 @@ set(QIPERF_C
   src/perf/measure.cpp
 )
 
-configure_file(qi/config.hpp.in ${CATKIN_DEVEL_PREFIX}/${CATKIN_GLOBAL_INCLUDE_DESTINATION}/qi/config.hpp)
-include_directories(${CATKIN_DEVEL_PREFIX}/include)
+qi_create_config_h(_out qi/config.hpp.in qi/config.hpp)
+list(APPEND QI_C ${_out})
 
 if(WITH_BOOST_LOCALE)
   list(APPEND QI_H qi/translator.hpp)
   list(APPEND QI_C src/translator.cpp)
 endif()
 
-install(DIRECTORY qi DESTINATION ${CATKIN_GLOBAL_INCLUDE_DESTINATION})
-install(FILES ${CATKIN_DEVEL_PREFIX}/${CATKIN_GLOBAL_INCLUDE_DESTINATION}/qi/config.hpp DESTINATION ${CATKIN_GLOBAL_INCLUDE_DESTINATION}/qi)
+qi_install_header(${QI_H} ${QITYPE_H} ${QIM_H} ${QIPERF_H} KEEP_RELATIVE_PATHS)
 
 if (WIN32)
   list(APPEND QI_C
@@ -373,15 +371,16 @@ endif()
 
 include_directories("${CMAKE_CURRENT_SOURCE_DIR}")
 
+qi_stage_cmake(qimodule-config.cmake)
 include(qimodule-config.cmake)
 
-add_library(qi SHARED
+qi_create_lib(qi SHARED
                  ${QI_H}     ${QI_C}
                  ${QITYPE_H} ${QITYPE_C}
                  ${QIM_H}    ${QIM_C}
-            )
-find_package(Boost QUIET COMPONENTS chrono filesystem program_options regex system thread)
-target_link_libraries(qi ${Boost_LIBRARIES})
+                 ${QIPERF_H} ${QIPERF_C}
+              DEPENDS ASSUME_SYSTEM_INCLUDE BOOST BOOST_ATOMIC BOOST_DATE_TIME BOOST_THREAD BOOST_CHRONO BOOST_FILESYSTEM BOOST_LOCALE BOOST_REGEX BOOST_PROGRAM_OPTIONS ${_ssldeps}
+              SUBMODULE ${_tp_qi})
 
 if (WITH_QT5_CORE)
   qi_use_lib(qi QT5_CORE)
@@ -391,7 +390,7 @@ if(WITH_BOOST_LOCALE)
 endif()
 
 if (UNIX)
-  target_link_libraries(qi pthread)
+  qi_use_lib(qi PTHREAD)
 endif()
 
 if(ANDROID)
@@ -399,13 +398,18 @@ if(ANDROID)
 endif()
 
 if(UNIX AND NOT APPLE AND NOT ANDROID)
-  target_link_libraries(qi dl rt)
+  qi_use_lib(qi DL RT)
 endif()
 
 if(WIN32)
   qi_use_lib(qi WSOCK IPHLPAPI PSAPI WSA) #Really?
 endif()
 
+qi_stage_lib(qi INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}/compat")
+
 
-install(TARGETS qi DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION})
-install(FILES package.xml DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})
+option(BUILD_EXAMPLES "build examples")
+if (BUILD_EXAMPLES)
+  add_subdirectory("examples")
+endif()
+add_subdirectory("tests")
diff --git a/cmake/libqi-extras.cmake.em b/cmake/libqi-extras.cmake.em
deleted file mode 100644
index 894d2ed..0000000
--- a/cmake/libqi-extras.cmake.em
+++ /dev/null
@@ -1,6 +0,0 @@
-@[if DEVELSPACE]@
-include_directories(@(CATKIN_DEVEL_PREFIX)/include)
-@[end if]@
-if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
-endif()
-- 
1.9.1

